import 'package:flutter/material.dart';

class ZerodhaLogo extends CustomPainter {
  const ZerodhaLogo();
  @override
  void paint(Canvas canvas, Size size) {
    Path path_0 = Path();
    path_0.moveTo(66.252, 21.469);
    path_0.cubicTo(70.65599999999999, 27.179000000000002, 74.30799999999999,
        33.593, 77.13799999999999, 40.509);
    path_0.lineTo(77.13799999999999, 3.931);
    path_0.lineTo(46.077, 3.931);
    path_0.cubicTo(53.549, 7.968, 60.394, 13.873999999999999, 66.252, 21.469);
    path_0.close();
    path_0.moveTo(21.473, 7.828);
    path_0.cubicTo(15.719, 7.828, 10.184, 9.058, 5, 11.334);
    path_0.lineTo(5, 76.069);
    path_0.lineTo(73.963, 76.069);
    path_0.cubicTo(73.42899999999999, 38.315000000000005, 50.087999999999994,
        7.828000000000003, 21.472999999999992, 7.828000000000003);

    Paint paint0Fill = Paint()..style = PaintingStyle.fill;
    paint0Fill.color = const Color(0xff387ed1).withOpacity(1.0);
    canvas.drawPath(path_0, paint0Fill);

    Path path_1 = Path();
    path_1.moveTo(118.349, 64.918);
    path_1.lineTo(156.882, 18.268000000000008);
    path_1.lineTo(119.56, 18.268000000000008);
    path_1.lineTo(119.56, 8.098);
    path_1.lineTo(171.81, 8.098);
    path_1.lineTo(171.81, 16.588);
    path_1.lineTo(133.277, 63.239000000000004);
    path_1.lineTo(171.81, 63.239000000000004);
    path_1.lineTo(171.81, 73.408);
    path_1.lineTo(118.349, 73.408);
    path_1.lineTo(118.349, 64.918);
    path_1.close();
    path_1.moveTo(186.17700000000002, 8.098000000000006);
    path_1.lineTo(234.50800000000004, 8.098000000000006);
    path_1.lineTo(234.50800000000004, 18.454000000000008);
    path_1.lineTo(197.56, 18.454000000000008);
    path_1.lineTo(197.56, 35.248000000000005);
    path_1.lineTo(230.311, 35.248000000000005);
    path_1.lineTo(230.311, 45.605000000000004);
    path_1.lineTo(197.56, 45.605000000000004);
    path_1.lineTo(197.56, 63.051);
    path_1.lineTo(234.973, 63.051);
    path_1.lineTo(234.973, 73.407);
    path_1.lineTo(186.17700000000002, 73.407);
    path_1.lineTo(186.17700000000002, 8.098);
    path_1.close();
    path_1.moveTo(248.68900000000002, 8.098000000000006);
    path_1.lineTo(277.79900000000004, 8.098000000000006);
    path_1.cubicTo(281.90400000000005, 8.098000000000006, 285.543,
        8.674000000000007, 288.716, 9.824000000000005);
    path_1.cubicTo(291.889, 10.974000000000004, 294.53000000000003,
        12.576000000000004, 296.646, 14.629000000000005);
    path_1.cubicTo(298.387, 16.434000000000005, 299.726, 18.517000000000003,
        300.659, 20.880000000000006);
    path_1.cubicTo(301.592, 23.24300000000001, 302.057, 25.857000000000006,
        302.057, 28.717000000000006);
    path_1.lineTo(302.057, 28.904000000000007);
    path_1.cubicTo(302.057, 31.579000000000008, 301.66900000000004,
        33.989000000000004, 300.892, 36.135000000000005);
    path_1.cubicTo(300.11499999999995, 38.281000000000006, 299.039, 40.179,
        297.67199999999997, 41.82600000000001);
    path_1.cubicTo(296.30499999999995, 43.47300000000001, 294.671,
        44.87500000000001, 292.77399999999994, 46.02400000000001);
    path_1.cubicTo(290.8769999999999, 47.17300000000001, 288.77699999999993,
        48.062000000000005, 286.4769999999999, 48.68300000000001);
    path_1.lineTo(304.1099999999999, 73.40800000000002);
    path_1.lineTo(290.5809999999999, 73.40800000000002);
    path_1.lineTo(274.4839999999999, 50.643000000000015);
    path_1.lineTo(274.29799999999994, 50.643000000000015);
    path_1.lineTo(260.07099999999997, 50.643000000000015);
    path_1.lineTo(260.07099999999997, 73.40800000000002);
    path_1.lineTo(248.68799999999996, 73.40800000000002);
    path_1.lineTo(248.68799999999996, 8.098);
    path_1.close();
    path_1.moveTo(276.92, 40.473000000000006);
    path_1.cubicTo(281.035, 40.473000000000006, 284.313, 39.49100000000001,
        286.744, 37.522000000000006);
    path_1.cubicTo(289.17500000000007, 35.553000000000004, 290.396, 32.883,
        290.396, 29.510000000000005);
    path_1.lineTo(290.396, 29.323000000000004);
    path_1.cubicTo(290.396, 25.763000000000005, 289.208, 23.060000000000002,
        286.837, 21.217000000000006);
    path_1.cubicTo(284.46599999999995, 19.37400000000001, 281.128,
        18.453000000000007, 276.823, 18.453000000000007);
    path_1.lineTo(260.07099999999997, 18.453000000000007);
    path_1.lineTo(260.07099999999997, 40.47200000000001);
    path_1.lineTo(276.91999999999996, 40.47200000000001);
    path_1.close();
    path_1.moveTo(347.309, 74.528);
    path_1.cubicTo(
        342.27000000000004, 74.528, 337.668, 73.64200000000001, 333.502, 71.87);
    path_1.cubicTo(
        329.336, 70.098, 325.75800000000004, 67.688, 322.772, 64.638);
    path_1.cubicTo(319.78599999999994, 61.58800000000001, 317.454,
        58.031000000000006, 315.776, 53.956);
    path_1.cubicTo(314.098, 49.881, 313.255, 45.543000000000006, 313.255,
        40.940000000000005);
    path_1.lineTo(313.255, 40.75300000000001);
    path_1.cubicTo(313.255, 36.150000000000006, 314.09499999999997,
        31.812000000000005, 315.776, 27.73700000000001);
    path_1.cubicTo(317.45700000000005, 23.662000000000013, 319.817,
        20.08600000000001, 322.866, 17.00700000000001);
    path_1.cubicTo(325.91499999999996, 13.928000000000008, 329.52,
        11.487000000000009, 333.69, 9.683000000000009);
    path_1.cubicTo(337.86, 7.879000000000008, 342.45799999999997,
        6.977000000000009, 347.497, 6.977000000000009);
    path_1.cubicTo(352.53600000000006, 6.977000000000009, 357.13800000000003,
        7.863000000000009, 361.30600000000004, 9.63600000000001);
    path_1.cubicTo(365.47400000000005, 11.40900000000001, 369.05000000000007,
        13.820000000000011, 372.03600000000006, 16.86700000000001);
    path_1.cubicTo(375.02200000000005, 19.914000000000012, 377.35200000000003,
        23.476000000000013, 379.03200000000004, 27.55000000000001);
    path_1.cubicTo(380.71200000000005, 31.62400000000001, 381.55300000000005,
        35.96300000000001, 381.55300000000005, 40.56500000000001);
    path_1.lineTo(381.55300000000005, 40.75200000000001);
    path_1.cubicTo(381.55300000000005, 45.35600000000001, 380.7130000000001,
        49.69500000000001, 379.03200000000004, 53.76700000000001);
    path_1.cubicTo(377.351, 57.83900000000001, 374.98900000000003,
        61.418000000000006, 371.94200000000006, 64.49700000000001);
    path_1.cubicTo(368.8950000000001, 67.57600000000002, 365.28600000000006,
        70.01800000000001, 361.11800000000005, 71.82100000000001);
    path_1.cubicTo(356.95000000000005, 73.62400000000001, 352.34800000000007,
        74.528, 347.309, 74.528);
    path_1.close();
    path_1.moveTo(347.49600000000004, 63.98500000000001);
    path_1.cubicTo(350.71700000000004, 63.98500000000001, 353.67400000000004,
        63.379000000000005, 356.367, 62.166000000000004);
    path_1.cubicTo(359.06, 60.953, 361.369, 59.306000000000004,
        363.28900000000004, 57.222);
    path_1.cubicTo(365.20900000000006, 55.138, 366.71100000000007, 52.696,
        367.7950000000001, 49.897);
    path_1.cubicTo(368.8790000000001, 47.098, 369.4200000000001,
        44.111999999999995, 369.4200000000001, 40.941);
    path_1.lineTo(369.4200000000001, 40.754000000000005);
    path_1.cubicTo(369.4200000000001, 37.58200000000001, 368.8790000000001,
        34.581, 367.7950000000001, 31.750000000000007);
    path_1.cubicTo(366.71100000000007, 28.91900000000001, 365.1910000000001,
        26.464000000000006, 363.2420000000001, 24.380000000000006);
    path_1.cubicTo(361.29300000000006, 22.296000000000006, 358.9530000000001,
        20.633000000000006, 356.22600000000006, 19.388000000000005);
    path_1.cubicTo(353.499, 18.143000000000004, 350.52900000000005,
        17.522000000000006, 347.30800000000005, 17.522000000000006);
    path_1.cubicTo(344.08700000000005, 17.522000000000006, 341.13000000000005,
        18.128000000000007, 338.43700000000007, 19.341000000000005);
    path_1.cubicTo(335.7440000000001, 20.554000000000002, 333.43500000000006,
        22.203000000000003, 331.51500000000004, 24.286000000000005);
    path_1.cubicTo(329.595, 26.369000000000007, 328.093, 28.811000000000007,
        327.00700000000006, 31.610000000000007);
    path_1.cubicTo(325.9210000000001, 34.409000000000006, 325.38200000000006,
        37.39500000000001, 325.38200000000006, 40.56700000000001);
    path_1.lineTo(325.38200000000006, 40.754000000000005);
    path_1.cubicTo(325.38200000000006, 43.926, 325.92300000000006,
        46.92700000000001, 327.00700000000006, 49.75600000000001);
    path_1.cubicTo(328.09100000000007, 52.58500000000001, 329.61100000000005,
        55.04500000000001, 331.56200000000007, 57.12800000000001);
    path_1.cubicTo(333.5130000000001, 59.211000000000006, 335.85100000000006,
        60.876000000000005, 338.5760000000001, 62.11900000000001);
    path_1.cubicTo(341.3010000000001, 63.36200000000001, 344.2750000000001,
        63.98500000000001, 347.4960000000001, 63.98500000000001);
    path_1.close();
    path_1.moveTo(395.451, 8.098000000000006);
    path_1.lineTo(419.805, 8.098000000000006);
    path_1.cubicTo(424.90500000000003, 8.098000000000006, 429.584,
        8.923000000000005, 433.848, 10.571000000000005);
    path_1.cubicTo(438.112, 12.219000000000005, 441.776, 14.505000000000006,
        444.856, 17.428000000000004);
    path_1.cubicTo(447.936, 20.351000000000003, 450.313, 23.789000000000005,
        451.995, 27.739000000000004);
    path_1.cubicTo(453.677, 31.689000000000004, 454.515, 35.96600000000001,
        454.515, 40.568000000000005);
    path_1.lineTo(454.515, 40.755);
    path_1.cubicTo(454.515, 45.359, 453.675, 49.651, 451.995, 53.63);
    path_1.cubicTo(450.315, 57.609, 447.936, 61.065000000000005, 444.856,
        63.986000000000004);
    path_1.cubicTo(441.776, 66.90700000000001, 438.108, 69.212, 433.848, 70.89);
    path_1.cubicTo(
        429.588, 72.568, 424.90500000000003, 73.409, 419.805, 73.409);
    path_1.lineTo(395.451, 73.409);
    path_1.lineTo(395.451, 8.098);
    path_1.close();
    path_1.moveTo(419.711, 63.05200000000001);
    path_1.cubicTo(423.13100000000003, 63.05200000000001, 426.242,
        62.507000000000005, 429.041, 61.413000000000004);
    path_1.cubicTo(431.84, 60.319, 434.221, 58.791000000000004, 436.178,
        56.824000000000005);
    path_1.cubicTo(438.135, 54.857000000000006, 439.66, 52.51200000000001,
        440.75, 49.794000000000004);
    path_1.cubicTo(
        441.84, 47.076, 442.385, 44.127, 442.385, 40.940000000000005);
    path_1.lineTo(442.385, 40.75300000000001);
    path_1.cubicTo(442.385, 37.56700000000001, 441.83799999999997,
        34.601000000000006, 440.75, 31.85300000000001);
    path_1.cubicTo(439.66200000000003, 29.10500000000001, 438.137,
        26.747000000000007, 436.178, 24.77900000000001);
    path_1.cubicTo(434.219, 22.811000000000014, 431.84, 21.26500000000001,
        429.041, 20.14000000000001);
    path_1.cubicTo(426.242, 19.01500000000001, 423.131, 18.45300000000001,
        419.711, 18.45300000000001);
    path_1.lineTo(406.834, 18.45300000000001);
    path_1.lineTo(406.834, 63.05100000000001);
    path_1.lineTo(419.711, 63.05100000000001);
    path_1.close();
    path_1.moveTo(468.414, 8.098000000000006);
    path_1.lineTo(479.79699999999997, 8.098000000000006);
    path_1.lineTo(479.79699999999997, 35.24900000000001);
    path_1.lineTo(511.14899999999994, 35.24900000000001);
    path_1.lineTo(511.14899999999994, 8.098);
    path_1.lineTo(522.5319999999999, 8.098);
    path_1.lineTo(522.5319999999999, 73.409);
    path_1.lineTo(511.14899999999994, 73.409);
    path_1.lineTo(511.14899999999994, 45.885);
    path_1.lineTo(479.79699999999997, 45.885);
    path_1.lineTo(479.79699999999997, 73.408);
    path_1.lineTo(468.414, 73.408);
    path_1.lineTo(468.414, 8.098);
    path_1.close();
    path_1.moveTo(562.463, 7.6310000000000064);
    path_1.lineTo(573.1, 7.6310000000000064);
    path_1.lineTo(601.836, 73.408);
    path_1.lineTo(589.707, 73.408);
    path_1.lineTo(583.082, 57.64);
    path_1.lineTo(552.199, 57.64);
    path_1.lineTo(545.4799999999999, 73.408);
    path_1.lineTo(533.7239999999999, 73.408);
    path_1.lineTo(562.463, 7.631);
    path_1.close();
    path_1.moveTo(578.885, 47.47200000000001);
    path_1.lineTo(567.5939999999999, 21.34700000000001);
    path_1.lineTo(556.3969999999999, 47.47200000000001);
    path_1.lineTo(578.885, 47.47200000000001);
    path_1.close();

    Paint paint1Fill = Paint()..style = PaintingStyle.fill;
    paint1Fill.color = const Color(0xff387ed1).withOpacity(1.0);
    canvas.drawPath(path_1, paint1Fill);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return true;
  }
}
